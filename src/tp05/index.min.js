const WebGLRender=require("./WebGL/WebGLRender"),Scene=require("./WebGL/Scene"),Axis=require("./Axis/Axis"),PerspectiveCamera=require("./Camera/PerspectiveCamera"),OrthographicCamera=require("./Camera/OrthographicCamera"),Grid=require("./Objects/Primitives/GridFloor"),Cube=require("./Objects/Primitives/Cube"),Cone=require("./Objects/Primitives/Cone"),Cylinder=require("./Objects/Primitives/Cylinder"),Sphere=require("./Objects/Primitives/Sphere"),DirLight=require("./Light/DirLight"),Ray=require("./Objects/Primitives/Ray"),PointLight=require("./Light/PointLight"),SpotLight=require("./Light/SpotLight"),FPSControl=require("./Control/FPSControl"),vec3=require("gl-matrix/vec3"),dat=require("dat.gui");let angle,face,maxAngle;console.log("tp04");const sceneConf={colorBackground:[0,0,0],ambientLight:[255,255,255],ambientLightIntensity:.05,selectedObj:null},cameraConf={fov:60,eye:[0,7,11],center:[0,0,0],useOrthographicCamera:!1,useLookAt:!1},gridConf={size:20,gap:1,enable:!1},axisConf={size:10,show_axis:[!0,!0,!0]},floorConf={pos:[0,-1.5,0],size:50,scale:[1,.01,1]},cubeConf={pos:[-6,0,0],scale:[1,1,1],rotation:[0,0,0],rotationq:[0,0,0,1],showWireframe:!1,useQuaternion:!1,anim:!0,selectable:!0},coneConf={pos:[-2,0,0],scale:[1,1,1],rotation:[0,0,0],vertex:8,shadeSmooth:!1,showWireframe:!1,selectable:!0},cylinderConf={pos:[2,0,0],scale:[1,1,1],rotation:[0,0,0],segments:16,shadeSmooth:!0,showWireframe:!1,selectable:!0},sphereConf={pos:[6,0,0],scale:[1,1,1],rotation:[0,0,0],rings:20,vertex:20,radius:1,shadeSmooth:!0,showWireframe:!1,selectable:!0},direccionalLightConf={direction:[1,-1,0],color:[255,255,255],intensity:.05},pointLight1Conf={name:"Point Light 1",pos:[-5,3,6],color:[255,0,50],intensity:100,enable:!0,showRepresentation:!0},pointLight2Conf={name:"Point Light 2",pos:[5,3,6],color:[50,0,255],intensity:100,enable:!0,showRepresentation:!0},pointLight3Conf={name:"Point Light 3",pos:[0,3,-6],color:[50,255,50],intensity:100,enable:!0,showRepresentation:!0},spotLightConf={name:"Spot Light 1",pos:[0,10,0],color:[255,255,255],direction:[0,-1,0],maxAngle:.8,intensity:100,enable:!0,showRepresentation:!0};let wegGLRender,scene,grid,axis,dirLight,camera,cube,cone,sphere,cylinder,canvas,Lights=[],control;console.log("Controles\n- Right click: entrar en modo Fly.\n- Left click: se lanza un rayo de prueba.\n- w / s:        mover hacia al frente / atras de la camara.\n- a / d:        mover hacia la izquierda / derecha de la camara.\n- Space / Ctrl: subir / bajar la camara.\n- q / e:        Roll de la camara.\n- Hold shift:   mover mas rapido la camara.\n");let keyPressed={w:!1,a:!1,s:!1,d:!1,q:!1,e:!1,shift:!1};function init(canvasName){canvas=document.getElementById(canvasName),wegGLRender=new WebGLRender(canvas),camera=new PerspectiveCamera(cameraConf.fov,canvas.clientWidth/canvas.clientHeight),scene=new Scene(sceneConf.colorBackground),control=new FPSControl,camera.eye=cameraConf.eye,camera.center=cameraConf.center,camera.vel=cameraConf.vel,camera.addPitch(control.fpsConf.rpy[1]),grid=new Grid(20),grid.enableRender=gridConf.enable,scene.addObjects(grid),axis=new Axis(axisConf.size,axisConf.show_axis),axis.enableRender=gridConf.enable,scene.addObjects(axis),dirLight=new DirLight(direccionalLightConf.intensity,direccionalLightConf.direction,vec3.scale([],direccionalLightConf.color,1/255)),scene.dirLight=dirLight,scene.ambientLight=[.01,.01,.01],Lights[0]=new PointLight(pointLight1Conf.pos,pointLight1Conf.intensity,vec3.scale([],pointLight1Conf.color,1/255),new Cube(.25)),Lights[0].conf=pointLight1Conf,Lights[0].enable=pointLight1Conf.enable,scene.addPointLights(Lights[0]),Lights[1]=new PointLight(pointLight2Conf.pos,pointLight2Conf.intensity,vec3.scale([],pointLight2Conf.color,1/255),new Cube(.25)),Lights[1].conf=pointLight2Conf,Lights[1].enable=pointLight2Conf.enable,scene.addPointLights(Lights[1]),Lights[2]=new PointLight(pointLight3Conf.pos,pointLight3Conf.intensity,vec3.scale([],pointLight3Conf.color,1/255),new Cube(.25)),Lights[2].conf=pointLight3Conf,Lights[2].enable=pointLight3Conf.enable,scene.addPointLights(Lights[2]),Lights[3]=new SpotLight(spotLightConf.maxAngle,spotLightConf.pos,spotLightConf.intensity,spotLightConf.color,spotLightConf.direction,new Cube(.25)),Lights[3].conf=spotLightConf,Lights[3].enable=spotLightConf.enable,scene.addSpotLights(Lights[3]);let floor=new Cube(floorConf.size);floor.t=floorConf.pos,floor.s=floorConf.scale,scene.addObjects(floor),cube=new Cube(2),cube.meshes[0].material=[1,0,0],cube.showLocalAxis=!0,scene.addObjects(cube),sceneConf.selectedObj=cube,cube.t=cubeConf.pos,cube.s=cubeConf.scale,cube.rotation=cubeConf.rotation,cube.rq=cubeConf.rotationq,cube.selectable=cubeConf.selectable,cone=new Cone(coneConf.vertex,1,2,coneConf.shadeSmooth),scene.addObjects(cone),cone.t=coneConf.pos,cone.s=coneConf.scale,cone.meshes[0].material=[0,1,0],cone.rotation=coneConf.rotation,cone.selectable=coneConf.selectable,cylinder=new Cylinder(cylinderConf.segments,1,2,cylinderConf.shadeSmooth),cylinder.meshes[0].material=[0,0,1],scene.addObjects(cylinder),cylinder.t=cylinderConf.pos,cylinder.s=cylinderConf.scale,cylinder.rotation=cylinderConf.rotation,cylinder.selectable=cylinderConf.selectable,sphere=new Sphere(sphereConf.vertex,sphereConf.rings,sphereConf.radius,sphereConf.shadeSmooth),sphere.meshes[0].material=[1,1,1],scene.addObjects(sphere),sphere.t=sphereConf.pos,sphere.s=sphereConf.scale,sphere.rotation=sphereConf.rotation,sphere.selectable=sphereConf.selectable,document.addEventListener("pointerlockchange",e=>{document.pointerLockElement!==canvas&&(canvas.onmousemove=null)}),document.addEventListener("keydown",e=>{keyPressed[e.key.toLowerCase()]=!0}),document.addEventListener("keyup",e=>{keyPressed[e.key.toLowerCase()]=!1}),canvas.addEventListener("contextmenu",e=>{e.preventDefault(),canvas.requestPointerLock(),canvas.onmousemove=function(event){control.onMouseMove(camera,event)}}),canvas.addEventListener("click",event=>{let objs=wegGLRender.getSelectedObject(event.clientX,event.clientY,camera,scene);if(objs.length>0){let nearObj=objs[0][0],min=objs[0][1];for(let i=1;i<objs.length;i++)objs[i][1]<min&&(min=objs[i][1],nearObj=objs[i][0]);selectObject(nearObj)}else selectObject(null)}),angle=0,face=0,maxAngle=90,initGUI(),requestAnimationFrame(renderLoop)}function renderLoop(){let conf;control.updateCamera(keyPressed,camera),wegGLRender.clearBackground(scene.clearColor),wegGLRender.render(scene,camera),cube.showWireframe(cubeConf.showWireframe),cube.useQuaternion=cubeConf.useQuaternion,cone.showWireframe(coneConf.showWireframe),coneConf.vertex===cone.baseVertexCount&&coneConf.shadeSmooth===cone.shadeSmooth||(cone.baseVertexCount=coneConf.vertex,cone.shadeSmooth=coneConf.shadeSmooth,cone.remesh()),cylinder.showWireframe(cylinderConf.showWireframe),cylinderConf.segments===cylinder.segments&&cylinderConf.shadeSmooth===cylinder.shadeSmooth||(cylinder.segments=cylinderConf.segments,cylinder.shadeSmooth=cylinderConf.shadeSmooth,cylinder.remesh()),sphere.showWireframe(sphereConf.showWireframe),sphereConf.rings===sphere.rings&&sphereConf.shadeSmooth===sphere.shadeSmooth&&sphereConf.vertex===sphere.vertexRing||(sphere.rings=sphereConf.rings,sphere.shadeSmooth=sphereConf.shadeSmooth,sphere.vertexRing=sphereConf.vertex,sphere.remesh()),cubeConf.anim&&(angle>=maxAngle&&(angle=0,face=Math.round(2*Math.random()),maxAngle=Math.round(45*Math.random()+45)),cube.rotateLocal(1,face),angle++),cameraConf.useOrthographicCamera&&camera instanceof PerspectiveCamera?(camera=new OrthographicCamera,camera.eye=cameraConf.eye,camera.center=cameraConf.center,camera.addPitch(control.fpsConf.rpy[1])):!cameraConf.useOrthographicCamera&&camera instanceof OrthographicCamera&&(camera=new PerspectiveCamera(cameraConf.fov,canvas.clientWidth/canvas.clientHeight),camera.eye=cameraConf.eye,camera.center=cameraConf.center,camera.addPitch(control.fpsConf.rpy[1])),camera.useLookAt=cameraConf.useLookAt,camera instanceof PerspectiveCamera&&camera.setFovFromDegrees(cameraConf.fov),grid.enableRender=gridConf.enable,axis.enableRender=gridConf.enable,scene.ambientLight=vec3.scale([],sceneConf.ambientLight,1/255),scene.ambientLightIntensity=sceneConf.ambientLightIntensity,scene.dirLight.color=vec3.scale([],direccionalLightConf.color,1/255),scene.dirLight.intensity=direccionalLightConf.intensity;for(let light of Lights){conf=light.conf,!1===conf.enable?(light.intensity>0&&(light.intensity-=10),light.intensity=Math.max(light.intensity,0),0===light.intensity&&(light.enable=!1)):(light.enable=!0,light.intensity<conf.intensity&&(light.intensity+=10),light.intensity=Math.min(light.intensity,conf.intensity)),light.representation.enableRender=conf.showRepresentation;let color=vec3.scale([],conf.color,1/255);null!==light.representation&&(light.representation.meshes[0].material=color),light.color=color,conf.hasOwnProperty("maxAngle")&&(light.angle=conf.maxAngle)}requestAnimationFrame(renderLoop)}function selectObject(obj){sceneConf.selectedObj&&(sceneConf.selectedObj.showLocalAxis=!1),obj&&(obj.showLocalAxis=!0,sceneConf.selectedObj=obj,console.log("Now selecting "+obj.constructor.name))}function initGUI(){let gui=new dat.GUI;gui.close(),gui.add(gridConf,"enable").name("Show grid & axis");let object=gui.addFolder("Objects"),cubeGUI=object.addFolder("Cube");cubeGUI.add(cubeConf,"showWireframe"),cubeGUI.add(cubeConf,"useQuaternion"),cubeGUI.add(cubeConf,"anim");let positionGUI=cubeGUI.addFolder("Position");positionGUI.add(cubeConf.pos,0,-10,10).name("X"),positionGUI.add(cubeConf.pos,1,-10,10).name("Y"),positionGUI.add(cubeConf.pos,2,-10,10).name("Z");let scaleGUI=cubeGUI.addFolder("Scale");scaleGUI.add(cubeConf.scale,0,0,10).name("X"),scaleGUI.add(cubeConf.scale,1,0,10).name("Y"),scaleGUI.add(cubeConf.scale,2,0,10).name("Z");let rotateGUI=cubeGUI.addFolder("Rotate");rotateGUI.add(cubeConf.rotation,0).name("X").listen(),rotateGUI.add(cubeConf.rotation,1).name("Y").listen(),rotateGUI.add(cubeConf.rotation,2).name("Z").listen();let rotateQGUI=cubeGUI.addFolder("RotateQuaternion");rotateQGUI.add(cubeConf.rotationq,0,0,1).name("X"),rotateQGUI.add(cubeConf.rotationq,1,0,1).name("Y"),rotateQGUI.add(cubeConf.rotationq,2,0,1).name("Z"),rotateQGUI.add(cubeConf.rotationq,3,0,10).name("W");let coneGUI=object.addFolder("Cone");coneGUI.add(coneConf,"showWireframe"),coneGUI.add(coneConf,"shadeSmooth"),coneGUI.add(coneConf,"vertex",3,64,1).name("Base Vertex"),positionGUI=coneGUI.addFolder("Position"),positionGUI.add(coneConf.pos,0,-10,10).name("X"),positionGUI.add(coneConf.pos,1,-10,10).name("Y"),positionGUI.add(coneConf.pos,2,-10,10).name("Z"),scaleGUI=coneGUI.addFolder("Scale"),scaleGUI.add(coneConf.scale,0,0,10).name("X"),scaleGUI.add(coneConf.scale,1,0,10).name("Y"),scaleGUI.add(coneConf.scale,2,0,10).name("Z"),rotateGUI=coneGUI.addFolder("Rotate"),rotateGUI.add(coneConf.rotation,0,0,360).name("X"),rotateGUI.add(coneConf.rotation,1,0,360).name("Y"),rotateGUI.add(coneConf.rotation,2,0,360).name("Z");let cylinderGUI=object.addFolder("Cylinder");cylinderGUI.add(cylinderConf,"showWireframe"),cylinderGUI.add(cylinderConf,"shadeSmooth"),cylinderGUI.add(cylinderConf,"segments",3,64,1).name("Segments"),positionGUI=cylinderGUI.addFolder("Position"),positionGUI.add(cylinderConf.pos,0,-10,10).name("X"),positionGUI.add(cylinderConf.pos,1,-10,10).name("Y"),positionGUI.add(cylinderConf.pos,2,-10,10).name("Z"),scaleGUI=cylinderGUI.addFolder("Scale"),scaleGUI.add(cylinderConf.scale,0,0,10).name("X"),scaleGUI.add(cylinderConf.scale,1,0,10).name("Y"),scaleGUI.add(cylinderConf.scale,2,0,10).name("Z"),rotateGUI=cylinderGUI.addFolder("Rotate"),rotateGUI.add(cylinderConf.rotation,0,0,360).name("X"),rotateGUI.add(cylinderConf.rotation,1,0,360).name("Y"),rotateGUI.add(cylinderConf.rotation,2,0,360).name("Z");let sphereGUI=object.addFolder("Sphere");sphereGUI.add(sphereConf,"showWireframe"),sphereGUI.add(sphereConf,"shadeSmooth"),sphereGUI.add(sphereConf,"vertex",3,64,1).name("Ring Vertex"),sphereGUI.add(sphereConf,"rings",1,64,1).name("Rings"),positionGUI=sphereGUI.addFolder("Position"),positionGUI.add(sphereConf.pos,0,-10,10).name("X"),positionGUI.add(sphereConf.pos,1,-10,10).name("Y"),positionGUI.add(sphereConf.pos,2,-10,10).name("Z"),scaleGUI=sphereGUI.addFolder("Scale"),scaleGUI.add(sphereConf.scale,0,0,10).name("X"),scaleGUI.add(sphereConf.scale,1,0,10).name("Y"),scaleGUI.add(sphereConf.scale,2,0,10).name("Z"),rotateGUI=sphereGUI.addFolder("Rotate"),rotateGUI.add(sphereConf.rotation,0,0,360).name("X"),rotateGUI.add(sphereConf.rotation,1,0,360).name("Y"),rotateGUI.add(sphereConf.rotation,2,0,360).name("Z");let cameraGUI=gui.addFolder("Camera");cameraGUI.add(cameraConf,"fov",0,90),cameraGUI.add(cameraConf,"useLookAt").name("Use LookAt?"),cameraGUI.add(cameraConf,"useOrthographicCamera");let cameraPositionGUI=cameraGUI.addFolder("Position");cameraPositionGUI.add(cameraConf.eye,0).name("X").listen(),cameraPositionGUI.add(cameraConf.eye,1).name("Y").listen(),cameraPositionGUI.add(cameraConf.eye,2).name("Z").listen();let cameraRotationGUI=cameraGUI.addFolder("Look At");cameraRotationGUI.add(cameraConf.center,0,0,10).name("X"),cameraRotationGUI.add(cameraConf.center,1,0,10).name("Y"),cameraRotationGUI.add(cameraConf.center,2,0,10).name("Z");let lucesGUI=gui.addFolder("Lights"),ambientGUI=lucesGUI.addFolder("Ambient Light");ambientGUI.addColor(sceneConf,"ambientLight").name("Ambient Light"),ambientGUI.add(sceneConf,"ambientLightIntensity",0,1,.01);let dirLight=lucesGUI.addFolder("Directional Light");dirLight.addColor(direccionalLightConf,"color"),dirLight.add(direccionalLightConf,"intensity",0,1,.01),positionGUI=dirLight.addFolder("Direction"),positionGUI.add(direccionalLightConf.direction,0,-10,10).name("X"),positionGUI.add(direccionalLightConf.direction,1,-10,10).name("Y"),positionGUI.add(direccionalLightConf.direction,2,-10,10).name("Z");let pointGUI=lucesGUI.addFolder("Positional Lights"),pointiGUI,conf,pointLight;for(let i=0;i<Lights.length;i++)pointLight=Lights[i],conf=pointLight.conf,pointiGUI=pointGUI.addFolder(conf.name),pointiGUI.add(conf,"intensity",0,100,.1),pointiGUI.add(conf,"enable").name("Enable"),pointiGUI.add(conf,"showRepresentation").name("Show Cube"),pointiGUI.addColor(conf,"color"),conf.hasOwnProperty("maxAngle")&&pointiGUI.add(conf,"maxAngle",0,.99,.01),conf.hasOwnProperty("direction")&&(positionGUI=pointiGUI.addFolder("Direction"),positionGUI.add(conf.direction,0,-10,10,.01).name("X"),positionGUI.add(conf.direction,1,-10,10,.01).name("Y"),positionGUI.add(conf.direction,2,-10,10,.01).name("Z")),positionGUI=pointiGUI.addFolder("Position"),positionGUI.add(conf.pos,0,-10,10).name("X"),positionGUI.add(conf.pos,1,-10,10).name("Y"),positionGUI.add(conf.pos,2,-10,10).name("Z")}init("c");